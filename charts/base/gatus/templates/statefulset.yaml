apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}
  labels:
    kasten/backup: "true"
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  revisionHistoryLimit: 1
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/controller: main
      app.kubernetes.io/name: {{ .Release.Name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  serviceName: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
        app.kubernetes.io/controller: main
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/name: {{ .Release.Name }}
    spec:
      enableServiceLinks: false
      serviceAccountName: {{ .Release.Name }}
      automountServiceAccountToken: true
      securityContext:
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: 568
        runAsUser: 568
        supplementalGroups:
        - 44
        - 109
        - 100
        - 65535
      containers:
        - name: k8s-sidecar
          image: {{ .Values.pods.sidecar.image.repository }}:{{ .Values.pods.sidecar.image.tag }}
          imagePullPolicy: {{ .Values.pods.sidecar.image.pullPolicy | default "IfNotPresent" }}
          {{- with .Values.pods.sidecar.env }}
          env:
          {{- range $key, $value := . }}
            - name: {{ $key }}
              value: {{ $value | quote }}
          {{- end }}
          {{- end }}
          ports:
            - containerPort: 8080
              name: health
              protocol: TCP
          {{- with .Values.pods.sidecar.resources }}
          resources:
{{ toYaml . | indent 12 }}
          {{- end }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: health
            initialDelaySeconds: 35
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /healthz
              port: health
            initialDelaySeconds: 20
            periodSeconds: 5
          volumeMounts:
          - mountPath: /config
            name: config
        - name: main
          env:
          - name: TZ
            value: {{ .Values.cluster.timezone }}
          - name: GATUS_CONFIG_PATH
            value: "/config"
          - name: GATUS_DELAY_START_SECONDS
            value: "30"
          {{- range $key, $value := .Values.pods.main.env }}
          - name: {{ $key }}
            value: {{ $value | quote }}
          {{- end }}
          image: {{ .Values.pods.main.image.repository }}:{{ .Values.pods.main.image.tag }}
          imagePullPolicy: {{ .Values.pods.main.image.pullPolicy | default "IfNotPresent" }}
          {{- with .Values.pods.main.resources }}
          resources:
{{ toYaml . | indent 12 }}
          {{- end }}
          volumeMounts:
          - mountPath: /data
            name: data
          - mountPath: /config
            name: config
          - mountPath: /config/config.yaml
            name: {{ .Release.Name }}-config
            subPath: config.yaml
            readOnly: true
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-config
        - name: data
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-data
        - name: gatus-config
          configMap:
            name: {{ .Release.Name }}-config
