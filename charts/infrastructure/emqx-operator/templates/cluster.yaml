---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/apps.emqx.io/emqx_v2beta1.json
apiVersion: apps.emqx.io/v2beta1
kind: EMQX
metadata:
  name: emqx
spec:
  image: public.ecr.aws/emqx/emqx:5.8.8
  serviceAccountName: {{ .Release.Name }}
  config:
    data: |
      authentication {
        backend = "built_in_database"
        mechanism = "password_based"
        password_hash_algorithm {
            name = "bcrypt"
        }
        user_id_type = "username"
        bootstrap_file = "/opt/init-user.json"
        bootstrap_type = "plain"
      }
      authorization {
        sources = [
          {
            type = built_in_database
            enable = true
          }
        ]
        no_match: "allow"
      }
      mqtt {
        max_packet_size = 100MB
        retain_available = true
      }
  coreTemplate:
    metadata:
      annotations:
        reloader.stakater.com/auto: "true"
    spec:
      volumeClaimTemplates:
        {{- if and .Values.cluster.storage .Values.cluster.storage.config .Values.cluster.storage.config.storageClassName }}
        storageClassName: {{ .Values.cluster.storage.config.storageClassName }}
        {{- end }}
        resources:
          requests:
            storage: 1Gi
        accessModes:
        - ReadWriteOnce
      replicas: 3
      envFrom:
        - secretRef:
            name: {{ .Release.Name }}
      extraVolumeMounts:
        - name: init-user
          mountPath: /opt/init-user.json
          subPath: init-user.json
          readOnly: true
      extraVolumes:
        - name: init-user
          secret:
            secretName: {{ .Release.Name }}-init-user
  listenersServiceTemplate:
    metadata:
      annotations:
        keepalived-operator.redhat-cop.io/keepalivedgroup: "keepalived-operator/lan"
    spec:
      type: ClusterIP
      externalIPs:
        - {{ .Values.emqx.network.ip }}
