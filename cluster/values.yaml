############################################################
# Global (default) spec & config
# These values act as defaults for all clusters unless overridden.
############################################################
spec:
  destination:
    server: https://kubernetes.default.svc
  source:
    repoURL: YOUR_REPO_URL
    targetRevision: HEAD

config:
  cluster:
    top_level_domain: example.com
    name: cluster
    admin_email: YOUR_EMAIL
    timezone: YOUR_TIMEZONE
    storage:
      config:
        storageClassName: synology-iscsi

############################################################
# Multi-cluster role enablement
# Each entry under clusters defines overrides + which roles are enabled.
# To add a new cluster, copy one of the examples and adjust server + roles.
# If "clusters" is defined, the ApplicationSet will ignore the legacy top-level "roles" map.
############################################################
clusters:
  cluster1:
    spec:
      destination:
        # Optional override (falls back to global spec.destination.server if omitted)
        server: https://kubernetes.default.svc
    roles:
      ai:
        enabled: true
      utilities:
        enabled: true
  cluster2:
    spec:
      destination:
        server: https://api.cluster2.example:6443
    roles:
      ai:
        enabled: true
      utilities:
        enabled: false

############################################################
# Backward compatibility (legacy single-cluster mode):
# If you prefer the previous behavior, omit the "clusters" block above
# and use the top-level roles map below. Keeping it commented now.
############################################################
# roles:
#   ai:
#     enabled: true
#   utilities:
#     enabled: true
